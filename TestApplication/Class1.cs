//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestApplication
{
    using JMS;
    using System;
    using System.Collections.Generic;
    using System.Linq;


    public class Controller1 : IImplInvoker
    {

        protected JMS.IMicroService _microService;

        public Controller1(JMS.IMicroService microService)
        {
            this._microService = microService;
        }

        public virtual string test()
        {
            return this._microService.Invoke<string>("test");
        }

        public virtual System.Threading.Tasks.Task<string> testAsync()
        {
            return this._microService.InvokeAsync<string>("test");
        }

        public virtual void Test2()
        {
            this._microService.Invoke("Test2");
        }

        public virtual System.Threading.Tasks.Task Test2Async()
        {
            return this._microService.InvokeAsync("Test2");
        }

        public virtual string Test(System.Nullable<int> p, string str)
        {
            return this._microService.Invoke<string>("Test", p, str);
        }

        public virtual System.Threading.Tasks.Task<string> TestAsync(System.Nullable<int> p, string str)
        {
            return this._microService.InvokeAsync<string>("Test", p, str);
        }

        public virtual long IntTest()
        {
            return this._microService.Invoke<long>("IntTest");
        }

        public virtual System.Threading.Tasks.Task<long> IntTestAsync()
        {
            return this._microService.InvokeAsync<long>("IntTest");
        }

        public virtual string ErrTest()
        {
            return this._microService.Invoke<string>("ErrTest");
        }

        public virtual System.Threading.Tasks.Task<string> ErrTestAsync()
        {
            return this._microService.InvokeAsync<string>("ErrTest");
        }
    }
}
